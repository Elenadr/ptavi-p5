Práctica 5 - Sesión SIP
Protocolos para la Transmisión de Audio y Vı́deo en Internet
Versión 8.0.1 - 6.11.2017

Ejercicios

Creación de repositorio para la práctica

1. Con el navegador, dirı́gete al repositorio ptavi-p5 en la cuenta del
profesor en GitHub1 y realiza un fork, de manera que consigas tener
una copia del repositorio en tu cuenta de GitHub. Clona el repositorio
que acabas de crear a local para poder editar los archivos. Trabaja a
partir de ahora en ese repositorio, sincronizando los cambios que vayas
realizando.

Como tarde al final de la práctica, deberás realizar un push para subir
tus cambios a tu repositorio en GitHub. En esta práctica, al contrario
que con las demás, se recomienda hacer frecuentes commits, pero el
push al final.

Análisis de una sesión SIP

Se ha capturado una sesión SIP con Ekiga (archivo sip.cap.gz), que
se puede abrir con Wireshark2 . Se pide rellenar las cuestiones que se
plantean en este guión en el fichero p5.txt que encontrarás también
en el repositorio.

2. Observa que las tramas capturadas corresponden a una sesión SIP
con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes
cuestiones:
* ¿Cuántos paquetes componen la captura?
La captura está compuesta por 954 paquetes.
* ¿Cuánto tiempo dura la captura?
La captura dura un total de 56.149345. Y se puede consultar en el campo Time del último paquete el 954.
* ¿Qué IP tiene la máquina donde se ha efectuado la captura? ¿Se
trata de una IP pública o de una IP privada? ¿Por qué lo sabes?
Tiene la IP 192.168.1.34. Es una IP privada. Porque está entre las direcciones privadas 192.

3. Antes de analizar las tramas, mira las estadı́sticas generales que aparecen en el menú de Statistics. En el apartado de jerarquı́a de protocolos (Protocol Hierarchy) se puede ver el porcentaje del tráfico
correspondiente al protocolo TCP y UDP.
* ¿Cuál de los dos es mayor? ¿Tiene esto sentido si estamos hablando
de una aplicación que transmite en tiempo real?
Es mayor UDP. Si es consistente, puesto que UDP no requiere establecimiento previo de conexión, asentimientos continuos ni control de flujo constante y al encontrarnos ante una aplicación en tiempo real, todas estas características son favorables.
* ¿Qué otros protocolos podemos ver en la jerarquı́a de protocolos?
¿Cuales crees que son señal y cuales ruido?
Podemos observar protocolo UDP, STUNT, SIP, RTP, RTCP, DNS, TCP, HTTP, ICMP, ARP.

4. Observa por encima el flujo de tramas en el menú de Statistics en IO
Graphs. La captura que estamos viendo incluye desde la inicialización
(registro) de la aplicación hasta su finalización, con una llamada entremedias.
* Filtra por sip para conocer cuándo se envı́an paquetes SIP. ¿En
qué segundos tienen lugar esos envı́os?
En el segundo 7(registro), en el 14 (llamada), en el 16(se repite la llamada), en el 37.5(BYE) y en el 55. 
* Y los paquetes con RTP, ¿cuándo se envı́an?
Se envían paquetes RTP delde el segundo 17 hasta los 40 segundos. Lo que sería durante la llamada.

 
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

5. Analiza las dos primeras tramas de la captura.
* ¿Qué servicio es el utilizado en estas tramas?
Se está utilizando el servicio DNS.
* ¿Cuál es la dirección IP del servidor de nombres del ordenador
que ha lanzado Ekiga?
La IP del servidor de nombres que ha lanzado Ekiga es 80.58.61.250.
* ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres?
La dirección IP que devuelve el servicio de nombres es la 86.64.162.35

6. A continuación, hay más de una docena de tramas TCP/HTTP.
* ¿Podrı́as decir la URL que se está pidiendo?
Esta pidiendo la URL http://ekiga.net/ip/
* ¿Qué user agent (UA) la está pidiendo?
El User-Agent: Ekiga\r\n
* ¿Qué devuelve el servidor?
El servidor devuelve: HTTP/1.1 200 OK.
* Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y
vamos a la misma URL, ¿qué recibimos? ¿Qué es, entonces, lo
que está respondiendo el servidor?
Si lanzamos en Mozilla recibimos la siguiente dirección IP: 212.128.254.147.
Por lo que el servidor está respondiendo con una dirección IP pública. 

7. Hasta la trama 45 se puede observar una secuencia de tramas del
protocolo STUN.
* ¿Por qué se hace uso de este protocolo?
    Porque STUN es usado principalmente por teléfonos(para llamadas SIP). Es un protocolo de red del tipo cliente/servidor que permite a clientes NAT encontrar su dirección IP pública.
* ¿Podrı́as decir si estamos tras un NAT o no?
Sí, estamos tras un NAT porque se está usando el protocolo STUN.

8. La trama 46 es la primera trama SIP. En un entorno como el de Internet, lo habitual es desconocer la dirección IP de la otra parte al
realizar una llamada. Por eso, todo usuario registra su localización en
un servidor Registrar. El Registrar guarda información sobre los
usuarios en un servidor de localización que puede ser utilizado para
localizar usuarios.
* ¿Qué dirección IP tiene el servidor Registrar?
La dirección IP ES 86.64.162.35.
* ¿A qué puerto (del servidor Registrar) se envı́an los paquetes
SIP?
Al puerto 5060.
* ¿Qué método SIP utiliza el UA para registrarse?
Method: REGISTER.
* Además de REGISTER, ¿podrı́as decir qué instrucciones SIP entiende el UA?
Entiende instrucciones CANCEL, MESSAGE, REFER, INVITE, ACK, NOTIFY, OPTIONS, BYE.


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

9. Fijémonos en las tramas siguientes a la número 46:
* ¿Se registra con éxito en el primer intento?
No, no se registra con éxito.
* ¿Cómo sabemos si el registro se ha realizado correctamente o no?
Sabemos que ha sido un éxito si nos llega 200 OK.
* ¿Podrı́as identificar las diferencias entre el primer intento y el
segundo de registro? (fı́jate en el tamaño de los paquetes y mira
a qué se debe el cambio)
El primer intento tiene una longitud de 523 bytes. Y el segundo de 712. EL segundo intento tiene una mayor cantidad de bytes porque se le añade la autorización para poder registrarse.
* ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica
las unidades.
El tiempo de expiración de la sesión es 3600 segundos.

10. Una vez registrados, podemos efectuar una llamada. Vamos a probar
con el servicio de eco de Ekiga que nos permite comprobar si nos
hemos conectado correctamente. El servicio de eco tiene la dirección
sip:500@ekiga.net. Veamos el INVITE de cerca.
* ¿Puede verse el nombre del que efectúa la llamada, ası́ como su
dirección SIP?
Sí se pude ver tanto el nombre como su dirección SIP, que serían:
From: "Gregorio Robles" <sip:grex@ekiga.net>
* ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué formato/protocolo está?
Contiene una descripción de la sesión. Esta en SDP.
* ¿Tiene éxito el primer intento? ¿Cómo lo sabes?
No, no tiene éxito el primer intento. Porque no recibimos el 200 OK. Y además se vuelve a enviar el INVITE.
* ¿En qué se diferencia el segundo INVITE más abajo del primero?
¿A qué crees que se debe esto?
El primer INVITE pide Proxy Authentication Required, y el segundo no. Se debe a que el primero requiere identificación.

11. Una vez conectado, estudia el intercambio de tramas.
* ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirven estos protocolos?
Se utilizan los protocolos RTP Y RTCP.
 RTP (Real-Time Transport Protocol) es el protocolo básico de transporte que sirve para el tráfico multimedia en Internet en tiempo real y RTCP (Real Time Control Protocol) es un protocolo que sirve para proporcionar informacion de control sobre la calidad de transmisión.
* ¿Cuál es el tamaño de paquete de los mismos?
Para RTP son 214 bytes y para RTCP 102 bytes.
* ¿Se utilizan bits de padding?
No, no se utilizan bits de padding ya que este campo aparece como Falso.
* ¿Cuál es la periodicidad de los paquetes (en origen; nota que la
captura es en destino)?
La periocidad de los paquetes es de 0.02 segundos aproximadamente.
* ¿Cuántos bits/segundo se envı́an?
8000 bytes/segundos.


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una
opción RTP. Empecemos mirando los flujos RTP.
* ¿Cuántos flujos hay? ¿por qué?
Hay dos flujos, uno para video y otro para audio.
* ¿Cuántos paquetes se pierden?
No se pierde ningún paquete.(0.0 %Lost)
* ¿Cuál es el valor máximo del delta? ¿Y qué es lo que significa el
valor de delta?
El valor máximo de la delta de uno de los flujos es 1290.444 y el del otro flujo es 1290.479. El valor máximo de la delta se refiere al retardo que sufre un paquete.
* ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué
quiere decir eso? ¿Crees que estamos ante una conversación de
calidad?
Los valores de jitter para un jitter son Max 119.635 y Mean 42.500. (Este es el audio)
Los valores para el otro flujo son Max 183.096 y Mean 153.240. (Este el el video)
El jitter es un parámetro para determinar el tiempo de transmisión de los paquetes.
Estamos ante una conversación de calidad por los valores de jitter del audio.

13. Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony
-> RTP -> Stream Analysis.
* ¿Cuánto valen el delta y el jitter para el primer paquete que
ha llegado?
Los dos tienen valor cero.
* ¿Podemos saber si éste es el primer paquete que nos han enviado?
Sí, porque si nos situamos en el primer paquete de RTP vemos que comenzamos a contar a partir de él el jitter y el delta.
* Los valores de jitter son menores de 10ms hasta un paquete
dado. ¿Cuál?
Hata el paquete 246. A partir del 247 son mayores.
* ¿A qué se debe el cambio tan brusco del jitter?
Es porque el valor de la delta (retardo) cambia de 24..03 ms a 554.74 ms.
* ¿Es comparable el cambio en el valor de jitter con el del delta?
¿Cual es más grande?
Sí, el valor del retardo aumenta respecto al paquete anterior. 

14. En Telephony selecciona el menú VoIP calls. Verás que se lista la
llamada de voz IP capturada en una ventana emergente. Selecciona
esa llamada y pulsa el botón Graph.
* ¿Cuánto dura la conversación?
La conversación dura 24.80289 segundos (39.229683 - 14.426793 = 24.80289 s).
* ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs?
    H.261 (video) aparece como SSRC: Synchronization Source identifier: 0x43306582 (1127245186)
    G.711 (audio) tenemos Synchronization Source identifier: 0xbf4afd37 (3209362743)
    Hay varios SSRC porque hay dos flujos (uno de video y otro de audio).
    No hay CSRCs, ya que el campo Contributing source identifiers count está a cero.

15. Identifica la trama donde se finaliza la conversación.
* ¿Qué método SIP se utiliza?
El método BYE.
* ¿En qué trama(s)?
En las tramas 924, 925, 927 y 933.
* ¿Por qué crees que se envı́a varias veces?
Para asegurar que llegan, porque UDP como bien sabemos es un protocolo No Fiable.

16. Finalmente, se cierra la aplicación de VozIP.
* ¿Por qué aparece una instrucción SIP del tipo REGISTER?
* ¿En qué trama sucede esto?
* ¿En qué se diferencia con la instrucción que se utilizó con anterioridad (al principio de la sesión)?
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

Captura de una sesión SIP

17. Dirı́gete a la web http://www.ekiga.net con el navegador y créate
una cuenta. Lanza Ekiga, y configúralo con los datos de la cuenta
que te acabas de crear. Comprueba que estás conectado (En la barra
al final de la ventana podrás ver “Connected”). Al terminar, cierra
completamente Ekiga.

18. Captura una sesión SIP de una conversación con el número SIP sip:500@ekigan.net.
Recuerda que has de comenzar a capturar tramas antes de arrancar
Ekiga para ver todo el proceso3 .

19. Observa las diferencias en el inicio de la conversación entre el entorno
del laboratorio y el del ejercicio anterior4 :
* ¿Se utilizan DNS y STUN? ¿Por qué?
* ¿Son diferentes el registro y la descripción de la sesión?

20. Identifica las diferencias existentes entre esta conversación y la conversación anterior:
* ¿Cuántos flujos tenemos?
* ¿Cuál es su periodicidad?
* ¿Cuánto es el valor máximo del delta y los valores medios y
máximo del jitter?
* ¿Podrı́as reproducir la conversación desde Wireshark? ¿Cómo?
Comprueba que poniendo un valor demasiado pequeño para el
buffer de jitter, la conversación puede no tener la calidad necesaria.
* ¿Sabrı́as decir qué tipo de servicio ofrece sip:500@ekiga.net?
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]


21. Filtra por los paquetes SIP de la captura y guarda únicamente los
paquetes SIP como p5.pcapng. Abre el fichero guardado para cerciorarte de que lo has hecho bien. Deberás añadirlo al repositorio.
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]
[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitHub]

